syntax = "proto2";

package com.didichuxing.horoscope.core;
option java_multiple_files = false;
option java_outer_classname = "EventBusRPC";

import "flow_runtime.proto";

service EventProcessorService {
    rpc putEvent (EventRequest) returns (EventReply) {
    }

    rpc putEventSimple (EventRequestSimple) returns (EventReplySimple) {
    }

    rpc putEventSync (SingleEventRequest) returns (SingleEventReply) {
    }
}
message ResponseHeader {
    enum ERRNO {
        OK = 0; //成功
        TIMEOUT = 1; // 请求超时
        EXECUTE = 2; //执行错误
        CHECK = 3; // 提交前校验错误
        BACKPRESS = 4; //反压
        COMMIT = 5; //提交错误
        INVAL = 6;//返回格式错误
        UNKNOWN = 999;
    }
    required ERRNO errno = 1;
    optional string msg = 2;
    required string traceInfo = 3;
}

message SeqFlowEvent {
    required int32 idx = 1;
    optional FlowEvent event = 2;
}

message EventRequest {
    required string traceInfo = 1;
    repeated SeqFlowEvent events = 2;
}

message EventReply {
    required ResponseHeader header = 1;
    repeated SeqFlowEvent successEvents = 2;
}

message EventRequestSimple {
    required string traceInfo = 1;
    map<int32, FlowEvent> seqEvents = 2;
}

message EventReplySimple {
    required ResponseHeader header = 1;
    map<int32, string> seqEventIds = 2;
}

message SingleEventRequest {
    required string traceInfo = 1;
    required FlowEvent event = 2;
}

message SingleEventReply {
    required ResponseHeader header = 1;
    required FlowInstance instance = 2;
}