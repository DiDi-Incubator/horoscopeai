traffic {
  intelligence-gateway-service {
    restful-compositor {
      apollo {
        namespace = "horoscope_config"
        config-name = "restful_compositor_test" // not exist, usee default config
      }
      default {
        feature-service = "http://10.160.121.99:8080"
        intelligence-state-service = "http://10.161.247.57:8011"
        intelligence-publisher-service = "http://10.89.203.46:8093"
        mlflow-service = "http://100.69.238.11:8000/map/warehouse/ms"
        example-service = "http://10.90.31.52:8084"
        topology-service = "http://10.89.203.46:8093"
      }
      // [WARN] online config, for debuging
//      default {
//        feature-service = "http://10.88.128.155:8080"
//        query-calc-service = "http://10.183.240.243:8080"
//        example-service = "http://10.88.128.155:8080"
//        intelligence-state-service = "http://10.160.99.65:8011"
//        intelligence-publisher-service = "http://10.90.31.51:8090"
//        mlflow-service = "http://100.69.238.11:8000/map/warehouse/ms"
//      }
    }
  }
}


horoscope {
  sources = [
    {
      factory-name = "batchJsonKafka"
      source-name = "s1"
      flow-name = "/root/flow1"
      parameter {
        kafka = {
          servers = "10.179.24.223:9093"
          cluster-id = 95
          app-id = "appId_001485"
          password = "_twYiKJNrBCX"
          topic = "event_source"
          group = "test"
          max = 10
          concurrency = 2

        }
        backpress {
          permits = 100
          timeout = 10
        }
      }
    }
    {
      factory-name = "batchJsonDDMQ"
      source-name = "s2"
      flow-name = "/root/flow1"
      parameter {
        ddmq {
          group = "cg_horoscope_source"
          env = "test"
          max = 10
          concurrency = 2
        }
        backpress {
          permits = 100
          timeout = 10
        }
      }
    }
  ]
  scheduler = {
    delay.backpress {
      permits = 1000
      timeout = 100
    }
  }
}
